{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\TeamTypingIndicator.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useChatContext, useTypingContext } from \"stream-chat-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamTypingIndicator = props => {\n  _s();\n\n  const {\n    type\n  } = props;\n  const {\n    client\n  } = useChatContext();\n  const {\n    typing\n  } = useTypingContext();\n  if (!client || !typing) return null;\n\n  if (type === \"list\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator__list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  const users = Object.values(typing).filter(_ref => {\n    var _client$user;\n\n    let {\n      user\n    } = _ref;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.id);\n  }).map(_ref2 => {\n    let {\n      user\n    } = _ref2;\n    return user.name || user.id;\n  });\n  if (!users.length) return null;\n  let text = \"Someone is typing\";\n\n  if (users.length === 1) {\n    text = `${users[0]} is typing`;\n  } else if (users.length === 2) {\n    text = `${users[0]} and ${users[1]} are typing`;\n  } else if (users.length > 2) {\n    text = `${users[0]} and ${users.length - 1} more are typing`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-indicator__input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator__input__text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TeamTypingIndicator, \"x5HqqxPZ70Hir8RNjfvDfavfyOM=\", false, function () {\n  return [useChatContext, useTypingContext];\n});\n\n_c = TeamTypingIndicator;\nexport default TeamTypingIndicator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamTypingIndicator\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/TeamTypingIndicator.jsx"],"names":["React","useChatContext","useTypingContext","TeamTypingIndicator","props","type","client","typing","users","Object","values","filter","user","id","map","name","length","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,mBAAjD;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAaL,cAAc,EAAjC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaL,gBAAgB,EAAnC;AAEA,MAAI,CAACI,MAAD,IAAW,CAACC,MAAhB,EAAwB,OAAO,IAAP;;AAExB,MAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,QAAMG,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcH,MAAd,EACXI,MADW,CACJ;AAAA;;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAc,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,EAAN,uBAAaP,MAAM,CAACM,IAApB,iDAAa,aAAaC,EAA1B,CAAd;AAAA,GADI,EAEXC,GAFW,CAEP;AAAA,QAAC;AAAEF,MAAAA;AAAF,KAAD;AAAA,WAAcA,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACC,EAAhC;AAAA,GAFO,CAAd;AAIA,MAAI,CAACL,KAAK,CAACQ,MAAX,EAAmB,OAAO,IAAP;AAEnB,MAAIC,IAAI,GAAG,mBAAX;;AAEA,MAAIT,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB;AACtBC,IAAAA,IAAI,GAAI,GAAET,KAAK,CAAC,CAAD,CAAI,YAAnB;AACD,GAFD,MAEO,IAAIA,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB;AAC7BC,IAAAA,IAAI,GAAI,GAAET,KAAK,CAAC,CAAD,CAAI,QAAOA,KAAK,CAAC,CAAD,CAAI,aAAnC;AACD,GAFM,MAEA,IAAIA,KAAK,CAACQ,MAAN,GAAe,CAAnB,EAAsB;AAC3BC,IAAAA,IAAI,GAAI,GAAET,KAAK,CAAC,CAAD,CAAI,QAAOA,KAAK,CAACQ,MAAN,GAAe,CAAE,kBAA3C;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,gBAAgDC;AAAhD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9CD;;GAAMd,mB;UAGeF,c,EACAC,gB;;;KAJfC,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { useChatContext, useTypingContext } from \"stream-chat-react\";\r\n\r\nconst TeamTypingIndicator = (props) => {\r\n  const { type } = props;\r\n\r\n  const { client } = useChatContext();\r\n  const { typing } = useTypingContext();\r\n\r\n  if (!client || !typing) return null;\r\n\r\n  if (type === \"list\") {\r\n    return (\r\n      <div className=\"typing-indicator__list\">\r\n        <div className=\"dots\">\r\n          <div className=\"dot\" />\r\n          <div className=\"dot\" />\r\n          <div className=\"dot\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const users = Object.values(typing)\r\n    .filter(({ user }) => user?.id !== client.user?.id)\r\n    .map(({ user }) => user.name || user.id);\r\n\r\n  if (!users.length) return null;\r\n\r\n  let text = \"Someone is typing\";\r\n\r\n  if (users.length === 1) {\r\n    text = `${users[0]} is typing`;\r\n  } else if (users.length === 2) {\r\n    text = `${users[0]} and ${users[1]} are typing`;\r\n  } else if (users.length > 2) {\r\n    text = `${users[0]} and ${users.length - 1} more are typing`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"typing-indicator__input\">\r\n      <div className=\"dots\">\r\n        <div className=\"dot\" />\r\n        <div className=\"dot\" />\r\n        <div className=\"dot\" />\r\n      </div>\r\n      <div className=\"typing-indicator__input__text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamTypingIndicator\r\n"]},"metadata":{},"sourceType":"module"}