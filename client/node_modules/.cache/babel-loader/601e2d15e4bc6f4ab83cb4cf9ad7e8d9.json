{"ast":null,"code":"import _slicedToArray from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Cookies from'universal-cookie';import{Chat}from'stream-chat-react';import{StreamChat}from'stream-chat';import{ChannelListContainer,ChannelContainer,Auth}from'./components';import'stream-chat-react/dist/css/index.css';import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiKey=\"8x9sft46tkdq\";var client=StreamChat.getInstance(apiKey);var cookies=new Cookies();var authToken=cookies.get('token');if(authToken){client.connectUser({name:cookies.get(\"username\"),fullName:cookies.get(\"fullName\"),id:cookies.get(\"userId\"),avatar:cookies.get(\"avatar\"),email:cookies.get(\"email\"),hashedPassword:cookies.get(\"hashedPassword\")},authToken);}function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),createType=_useState2[0],setCreateType=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCreating=_useState4[0],setIsCreating=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEditing=_useState6[0],setIsEditing=_useState6[1];if(!authToken)return/*#__PURE__*/_jsx(Auth,{});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Chat,{client:client,theme:\"team light\",children:[/*#__PURE__*/_jsx(ChannelListContainer,{isCreating:isCreating,setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing}),/*#__PURE__*/_jsx(ChannelContainer,{isCreating:isCreating,setIsCreating:setIsCreating,isEditing:isEditing,setIsEditing:setIsEditing,createType:createType})]})});}export default App;","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/App.jsx"],"names":["React","useState","Cookies","Chat","StreamChat","ChannelListContainer","ChannelContainer","Auth","apiKey","client","getInstance","cookies","authToken","get","connectUser","name","fullName","id","avatar","email","hashedPassword","App","createType","setCreateType","isCreating","setIsCreating","isEditing","setIsEditing"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,oBAAT,CAA+BC,gBAA/B,CAAiDC,IAAjD,KAA6D,cAA7D,CACA,MAAO,sCAAP,CACA,MAAO,aAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,cAAf,CACA,GAAMC,CAAAA,MAAM,CAAGL,UAAU,CAACM,WAAX,CAAuBF,MAAvB,CAAf,CACA,GAAMG,CAAAA,OAAO,CAAG,GAAIT,CAAAA,OAAJ,EAAhB,CACA,GAAMU,CAAAA,SAAS,CAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAlB,CAEA,GAAGD,SAAH,CAAc,CACZH,MAAM,CAACK,WAAP,CAAmB,CACjBC,IAAI,CAAEJ,OAAO,CAACE,GAAR,CAAY,UAAZ,CADW,CAEjBG,QAAQ,CAAEL,OAAO,CAACE,GAAR,CAAY,UAAZ,CAFO,CAGjBI,EAAE,CAAEN,OAAO,CAACE,GAAR,CAAY,QAAZ,CAHa,CAIjBK,MAAM,CAAEP,OAAO,CAACE,GAAR,CAAY,QAAZ,CAJS,CAKjBM,KAAK,CAAER,OAAO,CAACE,GAAR,CAAY,OAAZ,CALU,CAMjBO,cAAc,CAAET,OAAO,CAACE,GAAR,CAAY,gBAAZ,CANC,CAAnB,CAOGD,SAPH,EAQD,CAED,QAASS,CAAAA,GAAT,EAAe,CACb,cAAoCpB,QAAQ,CAAC,EAAD,CAA5C,wCAAOqB,UAAP,eAAmBC,aAAnB,eACA,eAAoCtB,QAAQ,CAAC,KAAD,CAA5C,yCAAOuB,UAAP,eAAmBC,aAAnB,eACA,eAAkCxB,QAAQ,CAAC,KAAD,CAA1C,yCAAOyB,SAAP,eAAkBC,YAAlB,eAEA,GAAG,CAACf,SAAJ,CAAe,mBAAO,KAAC,IAAD,IAAP,CACf,mBACE,kCACE,MAAC,IAAD,EAAM,MAAM,CAAEH,MAAd,CAAsB,KAAK,CAAC,YAA5B,wBACE,KAAC,oBAAD,EACE,UAAU,CAAEe,UADd,CAEE,aAAa,CAAEC,aAFjB,CAGE,aAAa,CAAEF,aAHjB,CAIE,YAAY,CAAEI,YAJhB,EADF,cAOE,KAAC,gBAAD,EACE,UAAU,CAAEH,UADd,CAEE,aAAa,CAAEC,aAFjB,CAGE,SAAS,CAAEC,SAHb,CAIE,YAAY,CAAEC,YAJhB,CAKE,UAAU,CAAEL,UALd,EAPF,GADF,EADF,CAmBD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Cookies from 'universal-cookie';\nimport { Chat } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\nimport 'stream-chat-react/dist/css/index.css';\nimport \"./index.css\";\n\nconst apiKey = \"8x9sft46tkdq\";\nconst client = StreamChat.getInstance(apiKey);\nconst cookies = new Cookies();\nconst authToken = cookies.get('token');\n\nif(authToken) {\n  client.connectUser({\n    name: cookies.get(\"username\"),\n    fullName: cookies.get(\"fullName\"),\n    id: cookies.get(\"userId\"),\n    avatar: cookies.get(\"avatar\"),\n    email: cookies.get(\"email\"),\n    hashedPassword: cookies.get(\"hashedPassword\"),\n  }, authToken);\n}\n\nfunction App() {\n  const [createType, setCreateType] = useState(\"\");\n  const [isCreating, setIsCreating] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  if(!authToken) return <Auth />\n  return (\n    <div>\n      <Chat client={client} theme=\"team light\">\n        <ChannelListContainer\n          isCreating={isCreating}\n          setIsCreating={setIsCreating}\n          setCreateType={setCreateType}\n          setIsEditing={setIsEditing}\n        />\n        <ChannelContainer\n          isCreating={isCreating}\n          setIsCreating={setIsCreating}\n          isEditing={isEditing}\n          setIsEditing={setIsEditing}\n          createType={createType}\n        />\n      </Chat>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}