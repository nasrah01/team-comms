{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Avatar,useChatContext}from'stream-chat-react';import{TiTick}from\"react-icons/ti\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListContainer=function ListContainer(_ref){var children=_ref.children;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"User\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Invite\"})]}),children]});};var UserItem=function UserItem(_ref2){var user=_ref2.user,setSelectedUsers=_ref2.setSelectedUsers;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var handleSelect=function handleSelect(){if(selected){setSelectedUsers(function(prevUsers){return prevUsers.filter(function(prevUser){return prevUser!==user.id;});});}else{setSelectedUsers(function(prevUsers){return[].concat(_toConsumableArray(prevUsers),[user.id]);});}setSelected(function(prevSelected){return!prevSelected;});};return/*#__PURE__*/_jsxs(\"div\",{onClick:handleSelect,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Avatar,{image:user.image,name:user.fullName||user.id,size:32}),/*#__PURE__*/_jsx(\"p\",{children:user.fullName||user.id})]}),selected?/*#__PURE__*/_jsx(TiTick,{}):'']});};var UserList=function UserList(_ref3){var setSelectedUsers=_ref3.setSelectedUsers;var _useChatContext=useChatContext(),client=_useChatContext.client;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),listEmpty=_useState8[0],setListEmpty=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];useEffect(function(){var getUsers=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!loading){_context.next=2;break;}return _context.abrupt(\"return\");case 2:setLoading(true);_context.prev=3;_context.next=6;return client.queryUsers({id:{$ne:client.userID}},{id:1},{limit:8});case 6:response=_context.sent;if(response.users.length){setUsers(response.users);}else{setListEmpty(true);}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);setError(true);case 13:setLoading(false);case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function getUsers(){return _ref4.apply(this,arguments);};}();if(client)getUsers();},[]);if(error){return/*#__PURE__*/_jsx(ListContainer,{children:/*#__PURE__*/_jsx(\"div\",{children:\"Error loading, please refresh and try again.\"})});}if(listEmpty){return/*#__PURE__*/_jsx(ListContainer,{children:/*#__PURE__*/_jsx(\"div\",{children:\"No users found.\"})});}return/*#__PURE__*/_jsx(ListContainer,{children:loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading users...\"}):users===null||users===void 0?void 0:users.map(function(user,i){return/*#__PURE__*/_jsx(UserItem,{index:i,user:user,setSelectedUsers:setSelectedUsers},user.id);})});};export default UserList;","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","TiTick","ListContainer","children","UserItem","user","setSelectedUsers","selected","setSelected","handleSelect","prevUsers","filter","prevUser","id","prevSelected","image","fullName","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","error","setError","getUsers","queryUsers","$ne","userID","limit","response","length","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\nimport { TiTick } from \"react-icons/ti\";\r\n\r\nconst ListContainer = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>User</p>\r\n        <p>Invite</p>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n   const [selected, setSelected] = useState(false);\r\n\r\n   const handleSelect = () => {\r\n     if (selected) {\r\n       setSelectedUsers((prevUsers) =>\r\n         prevUsers.filter((prevUser) => prevUser !== user.id)\r\n       );\r\n     } else {\r\n       setSelectedUsers((prevUsers) => [...prevUsers, user.id]);\r\n     }\r\n\r\n     setSelected((prevSelected) => !prevSelected);\r\n   };\r\n\r\n   return (\r\n     <div onClick={handleSelect}>\r\n       <div>\r\n         <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n         <p>{user.fullName || user.id}</p>\r\n       </div>\r\n       {selected ? <TiTick /> : ''}\r\n     </div>\r\n   );\r\n}\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n  const { client } = useChatContext();\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listEmpty, setListEmpty] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      if (loading) return;\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await client.queryUsers(\r\n          { id: { $ne: client.userID } },\r\n          { id: 1 },\r\n          { limit: 8 }\r\n        );\r\n\r\n        if (response.users.length) {\r\n          setUsers(response.users);\r\n        } else {\r\n          setListEmpty(true);\r\n        }\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    if (client) getUsers();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <ListContainer>\r\n        <div>\r\n          Error loading, please refresh and try again.\r\n        </div>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  if (listEmpty) {\r\n    return (\r\n      <ListContainer>\r\n        <div>No users found.</div>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListContainer>\r\n      {loading ? (\r\n        <div>Loading users...</div>\r\n      ) : (\r\n        users?.map((user, i) => (\r\n          <UserItem\r\n            index={i}\r\n            key={user.id}\r\n            user={user}\r\n            setSelectedUsers={setSelectedUsers}\r\n          />\r\n        ))\r\n      )}\r\n    </ListContainer>\r\n  );\r\n}\r\n\r\nexport default UserList\r\n"]},"metadata":{},"sourceType":"module"}