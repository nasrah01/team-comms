{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\ChannelContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Channel, useChatContext } from 'stream-chat-react';\nimport { ChannelInner, CreateChannel, EditChannel, TeamMessage } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChannelContainer(_ref) {\n  _s();\n\n  let {\n    isCreating,\n    setIsCreating,\n    isEditing,\n    setIsEditing,\n    createType\n  } = _ref;\n  const {\n    channel\n  } = useChatContext();\n  if (isCreating) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Channel container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChannelContainer, \"Y8G6UshdUXxX4l0KFZoPlRCuJ9A=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChannelContainer;\nexport default ChannelContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelContainer\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/ChannelContainer.jsx"],"names":["React","Channel","useChatContext","ChannelInner","CreateChannel","EditChannel","TeamMessage","ChannelContainer","isCreating","setIsCreating","isEditing","setIsEditing","createType","channel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,mBAAxC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,WAAnD,QAAsE,IAAtE;;;AAEA,SAASC,gBAAT,OAA4F;AAAA;;AAAA,MAAlE;AAACC,IAAAA,UAAD;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,YAAvC;AAAqDC,IAAAA;AAArD,GAAkE;AAE1F,QAAM;AAAEC,IAAAA;AAAF,MAAcX,cAAc,EAAlC;AAEA,MAAGM,UAAH,EACA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAVQD,gB;UAEaL,c;;;KAFbK,gB;AAYT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\r\nimport { Channel, useChatContext } from 'stream-chat-react';\r\nimport { ChannelInner, CreateChannel, EditChannel, TeamMessage } from './';\r\n\r\nfunction ChannelContainer({isCreating, setIsCreating, isEditing, setIsEditing, createType}) {\r\n\r\n  const { channel } = useChatContext();\r\n\r\n  if(isCreating)\r\n  return (\r\n    <div>\r\n      Channel container\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelContainer\r\n"]},"metadata":{},"sourceType":"module"}