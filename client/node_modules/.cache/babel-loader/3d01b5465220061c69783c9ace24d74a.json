{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\UserList.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport styled from 'styled-components';\nimport { Invite } from '../assets/Invite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(UserContent, {\n    children: [/*#__PURE__*/_jsxDEV(UserHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = _ref2 => {\n  _s();\n\n  let {\n    user,\n    setSelectedUsers\n  } = _ref2;\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    if (selected) {\n      setSelectedUsers(prevUsers => prevUsers.filter(prevUser => prevUser !== user.id));\n    } else {\n      setSelectedUsers(prevUsers => [...prevUsers, user.id]);\n    }\n\n    setSelected(prevSelected => !prevSelected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SelectContainer, {\n    onClick: handleSelect,\n    children: [/*#__PURE__*/_jsxDEV(SelectWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.avatar,\n        name: user.fullName || user.id,\n        size: 28\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.fullName || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), selected ? /*#__PURE__*/_jsxDEV(Invite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(UserInviteEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 6\n  }, this);\n};\n\n_s(UserItem, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c2 = UserItem;\n\nconst UserList = _ref3 => {\n  _s2();\n\n  let {\n    setSelectedUsers\n  } = _ref3;\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(UserMessage, {\n        children: \"Error loading, please refresh and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (listEmpty) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(UserMessage, {\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(UserMessage, {\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user,\n      setSelectedUsers: setSelectedUsers\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UserList, \"12oMBGjHHTXxcU7An+bzo8oyRxc=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\nconst UserContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c4 = UserContent;\nconst UserHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  p {\n    font-size: 14px;\n    line-height: 17px;\n    color: #858688;\n    margin-top: 16px;\n  }\n\n  p:first-child {\n    width: 60%;\n  }\n\n  p:nth-child(2) {\n    width: 30%;\n  }\n`;\n_c5 = UserHeader;\nconst SelectContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 2rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n\n  &::hover {\n    background: #f7f6f8;\n    cursor: pointer;\n  }\n\n  p {\n    font-size: 14px;\n    line-height: 17px;\n    color: #2c2c30;\n  }\n`;\n_c6 = SelectContainer;\nconst SelectWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 60%;\n\n  p {\n    font-weight: 500;\n  }\n`;\n_c7 = SelectWrapper;\nconst UserInviteEmpty = styled.div`\n  height: 28px;\n  width: 28px;\n  background: #f7f6f8;\n  border: 1px solid #dedddf;\n  border-radius: 14px;\n  box-sizing: border-box;\n  margin-left: 2px;\n`;\n_c8 = UserInviteEmpty;\nconst UserMessage = styled.div`\n  font-size: 16px;\n  color: #2c2c30;\n  margin: 20px;\n`;\n_c9 = UserMessage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");\n$RefreshReg$(_c4, \"UserContent\");\n$RefreshReg$(_c5, \"UserHeader\");\n$RefreshReg$(_c6, \"SelectContainer\");\n$RefreshReg$(_c7, \"SelectWrapper\");\n$RefreshReg$(_c8, \"UserInviteEmpty\");\n$RefreshReg$(_c9, \"UserMessage\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","styled","Invite","ListContainer","children","UserItem","user","setSelectedUsers","selected","setSelected","handleSelect","prevUsers","filter","prevUser","id","prevSelected","avatar","fullName","UserList","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","error","setError","getUsers","response","queryUsers","$ne","userID","limit","length","map","i","UserContent","div","UserHeader","SelectContainer","SelectWrapper","UserInviteEmpty","UserMessage"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\nimport styled from 'styled-components';\r\nimport { Invite } from '../assets/Invite';\r\n\r\nconst ListContainer = ({ children }) => {\r\n  return (\r\n    <UserContent>\r\n      <UserHeader>\r\n        <p>User</p>\r\n        <p>Invite</p>\r\n      </UserHeader>\r\n      {children}\r\n    </UserContent>\r\n  )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n   const [selected, setSelected] = useState(false);\r\n\r\n   const handleSelect = () => {\r\n     if (selected) {\r\n       setSelectedUsers((prevUsers) =>\r\n         prevUsers.filter((prevUser) => prevUser !== user.id)\r\n       );\r\n     } else {\r\n       setSelectedUsers((prevUsers) => [...prevUsers, user.id]);\r\n     }\r\n\r\n     setSelected((prevSelected) => !prevSelected);\r\n   };\r\n\r\n   return (\r\n     <SelectContainer onClick={handleSelect}>\r\n       <SelectWrapper>\r\n         <Avatar\r\n           image={user.avatar}\r\n           name={user.fullName || user.id}\r\n           size={28}\r\n         />\r\n         <p>{user.fullName || user.id}</p>\r\n       </SelectWrapper>\r\n       {selected ? <Invite /> : <UserInviteEmpty></UserInviteEmpty>}\r\n     </SelectContainer>\r\n   );\r\n}\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n  const { client } = useChatContext();\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listEmpty, setListEmpty] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      if (loading) return;\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await client.queryUsers(\r\n          { id: { $ne: client.userID } },\r\n          { id: 1 },\r\n          { limit: 8 }\r\n        );\r\n\r\n        if (response.users.length) {\r\n          setUsers(response.users);\r\n        } else {\r\n          setListEmpty(true);\r\n        }\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    if (client) getUsers();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <ListContainer>\r\n        <UserMessage>\r\n          Error loading, please refresh and try again.\r\n        </UserMessage>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  if (listEmpty) {\r\n    return (\r\n      <ListContainer>\r\n        <UserMessage>No users found.</UserMessage>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListContainer>\r\n      {loading ? (\r\n        <UserMessage>Loading users...</UserMessage>\r\n      ) : (\r\n        users?.map((user, i) => (\r\n          <UserItem\r\n            index={i}\r\n            key={user.id}\r\n            user={user}\r\n            setSelectedUsers={setSelectedUsers}\r\n          />\r\n        ))\r\n      )}\r\n    </ListContainer>\r\n  );\r\n}\r\n\r\nexport default UserList\r\n\r\nconst UserContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst UserHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n\r\n  p {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #858688;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  p:first-child {\r\n    width: 60%;\r\n  }\r\n\r\n  p:nth-child(2) {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 2rem;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n\r\n  &::hover {\r\n    background: #f7f6f8;\r\n    cursor: pointer;\r\n  }\r\n\r\n  p {\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n    color: #2c2c30;\r\n  }\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 60%;\r\n\r\n  p {\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst UserInviteEmpty = styled.div`\r\n  height: 28px;\r\n  width: 28px;\r\n  background: #f7f6f8;\r\n  border: 1px solid #dedddf;\r\n  border-radius: 14px;\r\n  box-sizing: border-box;\r\n  margin-left: 2px;\r\n`;\r\n\r\nconst UserMessage = styled.div`\r\n  font-size: 16px;\r\n  color: #2c2c30;\r\n  margin: 20px;\r\n`;"]},"metadata":{},"sourceType":"module"}