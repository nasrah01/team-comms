{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\ChannelInner.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport { ChannelInfo } from '../assets/ChannelInfo';\nimport { ThreadMessageInput } from './';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GiphyContext = /*#__PURE__*/React.createContext({});\n\nconst ChannelInner = _ref => {\n  _s();\n\n  let {\n    setIsEditing\n  } = _ref;\n  const [giphyState, setGiphyState] = useState(false);\n  const {\n    sendMessage\n  } = useChannelActionContext();\n\n  const overrideSubmitHandler = message => {\n    var _message$parent;\n\n    let updatedMessage = {\n      attachments: message.attachments,\n      mentioned_users: message.mentioned_users,\n      parent_id: (_message$parent = message.parent) === null || _message$parent === void 0 ? void 0 : _message$parent.id,\n      parent: message.parent,\n      text: message.text\n    };\n\n    if (giphyState) {\n      updatedMessage = { ...updatedMessage,\n        text: `/giphy ${message.text}`\n      };\n    }\n\n    if (sendMessage) {\n      sendMessage(updatedMessage);\n      setGiphyState(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GiphyContext.Provider, {\n    value: {\n      giphyState,\n      setGiphyState\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(TeamChannelHeader, {\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          overrideSubmitHandler: overrideSubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Thread, {\n        additionalMessageInputProps: {\n          grow: true,\n          Input: ThreadMessageInput\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelInner, \"fXTxSJzuuU6qWjEF6MAcQfEXamM=\", false, function () {\n  return [useChannelActionContext];\n});\n\n_c = ChannelInner;\n\nconst TeamChannelHeader = _ref2 => {\n  _s2();\n\n  let {\n    setIsEditing\n  } = _ref2;\n  const {\n    channel,\n    watcher_count\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n\n  const MessagingHeader = () => {\n    const members = Object.values(channel.state.members).filter(_ref3 => {\n      let {\n        user\n      } = _ref3;\n      return user.id !== client.userID;\n    });\n    const additionalMembers = members.length - 3;\n\n    if (channel.type === \"messaging\") {\n      return /*#__PURE__*/_jsxDEV(UserContainer, {\n        children: [members.map((_ref4, i) => {\n          let {\n            user\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(UserWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              image: user.avatar,\n              name: user.fullName || user.id,\n              size: 42\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.fullName || user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this);\n        }), additionalMembers > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"and \", additionalMembers, \" more\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditingChannel, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: \"flex\",\n          width: \"100%\"\n        },\n        onClick: () => setIsEditing(true),\n        children: /*#__PURE__*/_jsxDEV(ChannelInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getWatcherText = watchers => {\n    if (!watchers) return \"No users online\";\n    if (watchers === 1) return \"1 user online\";\n    return `${watchers} users online`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(MessagingContainer, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MessagingHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OnlineUsers, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getWatcherText(watcher_count)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TeamChannelHeader, \"Tb4arasuDJW0BnLDUr6/wz198yQ=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n\n_c2 = TeamChannelHeader;\nexport default ChannelInner;\nconst MessagingContainer = styled.div`\n  display: flex;\n  padding: 2rem;\n  border-bottom: 1px solid #e6e6e6;\n  height: 65px;\n`;\n_c3 = MessagingContainer;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n_c4 = Wrapper;\nconst UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c5 = UserContainer;\nconst UserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 1.4rem;\n  color: #2c2c30;\n  padding-right: 2rem;\n`;\n_c6 = UserWrapper;\nconst OnlineUsers = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.2rem;\n  color: #858688;\n`;\n_c7 = OnlineUsers;\nconst EditingChannel = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 1.4rem;\n  color: #2c2c30;\n\n  p {\n    padding-right: 0.75rem;\n  }\n`;\n_c8 = EditingChannel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"ChannelInner\");\n$RefreshReg$(_c2, \"TeamChannelHeader\");\n$RefreshReg$(_c3, \"MessagingContainer\");\n$RefreshReg$(_c4, \"Wrapper\");\n$RefreshReg$(_c5, \"UserContainer\");\n$RefreshReg$(_c6, \"UserWrapper\");\n$RefreshReg$(_c7, \"OnlineUsers\");\n$RefreshReg$(_c8, \"EditingChannel\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/ChannelInner.jsx"],"names":["React","useState","MessageList","MessageInput","Thread","Window","useChannelActionContext","Avatar","useChannelStateContext","useChatContext","ChannelInfo","ThreadMessageInput","styled","GiphyContext","createContext","ChannelInner","setIsEditing","giphyState","setGiphyState","sendMessage","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","id","text","display","width","grow","Input","TeamChannelHeader","channel","watcher_count","client","MessagingHeader","members","Object","values","state","filter","user","userID","additionalMembers","length","type","map","i","avatar","fullName","data","name","getWatcherText","watchers","MessagingContainer","div","Wrapper","UserContainer","UserWrapper","OnlineUsers","EditingChannel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from \"stream-chat-react\";\r\nimport {ChannelInfo} from '../assets/ChannelInfo';\r\nimport { ThreadMessageInput } from './';\r\nimport styled from 'styled-components';\r\n\r\nexport const GiphyContext = React.createContext({});\r\n\r\nconst ChannelInner = ({ setIsEditing }) => {\r\n  const [giphyState, setGiphyState] = useState(false);\r\n  const { sendMessage } = useChannelActionContext();\r\n\r\n  const overrideSubmitHandler = (message) => {\r\n    let updatedMessage = {\r\n      attachments: message.attachments,\r\n      mentioned_users: message.mentioned_users,\r\n      parent_id: message.parent?.id,\r\n      parent: message.parent,\r\n      text: message.text,\r\n    };\r\n\r\n    if (giphyState) {\r\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\r\n    }\r\n\r\n    if (sendMessage) {\r\n      sendMessage(updatedMessage);\r\n      setGiphyState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\r\n      <div style={{ display: \"flex\", width: \"100%\" }}>\r\n        <Window>\r\n          <TeamChannelHeader setIsEditing={setIsEditing} />\r\n          <MessageList />\r\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\r\n        </Window>\r\n        <Thread\r\n          additionalMessageInputProps={{\r\n            grow: true,\r\n            Input: ThreadMessageInput,\r\n          }}\r\n        />\r\n      </div>\r\n    </GiphyContext.Provider>\r\n  );\r\n};\r\n\r\nconst TeamChannelHeader = ({ setIsEditing }) => {\r\n  const { channel, watcher_count } = useChannelStateContext();\r\n  const { client } = useChatContext();\r\n\r\n  const MessagingHeader = () => {\r\n    const members = Object.values(channel.state.members).filter(\r\n      ({ user }) => user.id !== client.userID\r\n    );\r\n    const additionalMembers = members.length - 3;\r\n\r\n    if (channel.type === \"messaging\") {\r\n      return (\r\n        <UserContainer>\r\n          {members.map(({ user }, i) => (\r\n            <UserWrapper key={i}>\r\n              <Avatar\r\n                image={user.avatar}\r\n                name={user.fullName || user.id}\r\n                size={42}\r\n              />\r\n              <p>\r\n                {user.fullName || user.id}\r\n              </p>\r\n            </UserWrapper>\r\n          ))}\r\n\r\n          {additionalMembers > 0 && (\r\n            <p>\r\n              and {additionalMembers} more\r\n            </p>\r\n          )}\r\n        </UserContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <EditingChannel>\r\n        <p>{channel.data.name}</p>\r\n        <span style={{ display: \"flex\", width: \"100%\" }} onClick={() => setIsEditing(true)}>\r\n          <ChannelInfo />\r\n        </span>\r\n      </EditingChannel>\r\n    );\r\n  };\r\n\r\n  const getWatcherText = (watchers) => {\r\n    if (!watchers) return \"No users online\";\r\n    if (watchers === 1) return \"1 user online\";\r\n    return `${watchers} users online`;\r\n  };\r\n\r\n  return (\r\n    <MessagingContainer>\r\n      <Wrapper>\r\n        <MessagingHeader />\r\n        <OnlineUsers>\r\n          <p>{getWatcherText(watcher_count)}</p>\r\n        </OnlineUsers>\r\n      </Wrapper>\r\n    </MessagingContainer>\r\n  );\r\n};\r\n\r\nexport default ChannelInner;\r\n\r\nconst MessagingContainer = styled.div`\r\n  display: flex;\r\n  padding: 2rem;\r\n  border-bottom: 1px solid #e6e6e6;\r\n  height: 65px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst UserWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 1.4rem;\r\n  color: #2c2c30;\r\n  padding-right: 2rem;\r\n`;\r\n\r\nconst OnlineUsers = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  color: #858688;\r\n`;\r\n\r\nconst EditingChannel = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 1.4rem;\r\n  color: #2c2c30;\r\n\r\n  p {\r\n    padding-right: 0.75rem;\r\n  }\r\n`;"]},"metadata":{},"sourceType":"module"}