{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { TiTick } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListContainer;\n\nconst UserItem = _ref2 => {\n  let {\n    user\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: user.image,\n        name: user.fullName || user.id,\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.fullName || user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TiTick, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 6\n  }, this);\n};\n\n_c2 = UserItem;\n\nconst UserList = _ref3 => {\n  _s();\n\n  let {\n    setSelectedUsers\n  } = _ref3;\n  const {\n    client\n  } = useChatContext();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const getUsers = async () => {\n      if (loading) return;\n      setLoading(true);\n\n      try {\n        const response = await client.queryUsers({\n          id: {\n            $ne: client.userID\n          }\n        }, {\n          id: 1\n        }, {\n          limit: 8\n        });\n\n        if (response.users.length) {\n          setUsers(response.users);\n        } else {\n          setListEmpty(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    if (client) getUsers();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error loading, please refresh and try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (listEmpty) {\n    return /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : users === null || users === void 0 ? void 0 : users.map((user, i) => /*#__PURE__*/_jsxDEV(UserItem, {\n      index: i,\n      user: user,\n      setSelectedUsers: setSelectedUsers\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"12oMBGjHHTXxcU7An+bzo8oyRxc=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = UserList;\nexport default UserList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"UserItem\");\n$RefreshReg$(_c3, \"UserList\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/UserList.jsx"],"names":["React","useEffect","useState","Avatar","useChatContext","TiTick","ListContainer","children","UserItem","user","image","fullName","id","UserList","setSelectedUsers","client","users","setUsers","loading","setLoading","listEmpty","setListEmpty","error","setError","getUsers","response","queryUsers","$ne","userID","limit","length","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\nimport { TiTick } from \"react-icons/ti\";\r\n\r\nconst ListContainer = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>User</p>\r\n        <p>Invite</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UserItem = ({ user }) => {\r\n   return (\r\n     <div>\r\n       <div>\r\n         <Avatar image={user.image} name={user.fullName || user.id} size={32}/>\r\n         <p>{user.fullName || user.id}</p>\r\n       </div>\r\n       <TiTick />\r\n     </div>\r\n   );\r\n}\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n  const { client } = useChatContext();\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [listEmpty, setListEmpty] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      if (loading) return;\r\n\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await client.queryUsers(\r\n          { id: { $ne: client.userID } },\r\n          { id: 1 },\r\n          { limit: 8 }\r\n        );\r\n\r\n        if (response.users.length) {\r\n          setUsers(response.users);\r\n        } else {\r\n          setListEmpty(true);\r\n        }\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    if (client) getUsers();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return (\r\n      <ListContainer>\r\n        <div>\r\n          Error loading, please refresh and try again.\r\n        </div>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  if (listEmpty) {\r\n    return (\r\n      <ListContainer>\r\n        <div>No users found.</div>\r\n      </ListContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListContainer>\r\n      {loading ? (\r\n        <div>Loading users...</div>\r\n      ) : (\r\n        users?.map((user, i) => (\r\n          <UserItem\r\n            index={i}\r\n            key={user.id}\r\n            user={user}\r\n            setSelectedUsers={setSelectedUsers}\r\n          />\r\n        ))\r\n      )}\r\n    </ListContainer>\r\n  );\r\n}\r\n\r\nexport default UserList\r\n"]},"metadata":{},"sourceType":"module"}