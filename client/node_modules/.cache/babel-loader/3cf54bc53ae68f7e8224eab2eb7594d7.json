{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\EditChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useChatContext } from \"stream-chat-react\";\nimport { UserList } from './';\nimport { CloseCreateChannel } from \"../assets/CloseCreateChannel\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = _ref => {\n  let {\n    channelName = \"\",\n    setChannelName\n  } = _ref;\n\n  const handleChange = e => {\n    e.preventDefault();\n    setChannelName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: handleChange,\n      placeholder: \"channel-name (no spaces)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChannelNameInput;\n\nconst EditChannel = _ref2 => {\n  _s();\n\n  var _channel$data;\n\n  let {\n    setIsEditing\n  } = _ref2;\n  const {\n    channel\n  } = useChatContext();\n  const [channelName, setChannelName] = useState(channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const updateChannel = async e => {\n    e.preventDefault();\n    const nameChanged = channelName !== (channel.data.name || channel.data.id);\n\n    if (nameChanged) {\n      await channel.update({\n        name: channelName\n      }, {\n        text: `Channel name changed to ${channelName}`\n      });\n    }\n\n    if (selectedUsers.length) {\n      await channel.addMembers(selectedUsers);\n    }\n\n    setChannelName(null);\n    setIsEditing(false);\n    setSelectedUsers([]);\n  };\n\n  return;\n};\n\n_s(EditChannel, \"NBbgo5oy0KlJ2BqZGWTZ8g7JzIU=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = EditChannel;\nexport default EditChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"EditChannel\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/EditChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","styled","ChannelNameInput","channelName","setChannelName","handleChange","e","preventDefault","target","value","EditChannel","setIsEditing","channel","data","name","selectedUsers","setSelectedUsers","updateChannel","nameChanged","id","update","text","length","addMembers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,gBAAgB,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,WAAW,GAAG,EAAhB;AAAoBC,IAAAA;AAApB,GAAyC;;AACjE,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,KAAK,EAAEN,WADT;AAEE,MAAA,QAAQ,EAAEE,YAFZ;AAGE,MAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;KAAMH,gB;;AAmBN,MAAMQ,WAAW,GAAG,SAAoB;AAAA;;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAcd,cAAc,EAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACe,OAAD,aAACA,OAAD,wCAACA,OAAO,CAAEC,IAAV,kDAAC,cAAeC,IAAhB,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMoB,aAAa,GAAG,MAAOX,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMW,WAAW,GAAGf,WAAW,MAAMS,OAAO,CAACC,IAAR,CAAaC,IAAb,IAAqBF,OAAO,CAACC,IAAR,CAAaM,EAAxC,CAA/B;;AAEA,QAAGD,WAAH,EAAgB;AACd,YAAMN,OAAO,CAACQ,MAAR,CAAe;AAACN,QAAAA,IAAI,EAAEX;AAAP,OAAf,EAAoC;AAACkB,QAAAA,IAAI,EAAG,2BAA0BlB,WAAY;AAA9C,OAApC,CAAN;AACD;;AAED,QAAGY,aAAa,CAACO,MAAjB,EAAyB;AACvB,YAAMV,OAAO,CAACW,UAAR,CAAmBR,aAAnB,CAAN;AACD;;AAEDX,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAO,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAhBD;;AAkBA;AACD,CAxBD;;GAAMN,W;UACgBZ,c;;;MADhBY,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useChatContext } from \"stream-chat-react\";\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from \"../assets/CloseCreateChannel\";\r\nimport styled from 'styled-components';\r\n\r\nconst ChannelNameInput = ({ channelName = \"\", setChannelName }) => {\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setChannelName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Name</p>\r\n      <input\r\n        value={channelName}\r\n        onChange={handleChange}\r\n        placeholder=\"channel-name (no spaces)\"\r\n      />\r\n      <p>Add Members</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditChannel = ({setIsEditing}) => {\r\n  const { channel } = useChatContext();\r\n  const [channelName, setChannelName] = useState(channel?.data?.name);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n  const updateChannel = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const nameChanged = channelName !== (channel.data.name || channel.data.id);\r\n\r\n    if(nameChanged) {\r\n      await channel.update({name: channelName}, {text: `Channel name changed to ${channelName}`});\r\n    }\r\n\r\n    if(selectedUsers.length) {\r\n      await channel.addMembers(selectedUsers);\r\n    }\r\n\r\n    setChannelName(null);\r\n    setIsEditing(false);\r\n    setSelectedUsers([]);\r\n  }\r\n\r\n  return \r\n};\r\n\r\nexport default EditChannel;\r\n"]},"metadata":{},"sourceType":"module"}