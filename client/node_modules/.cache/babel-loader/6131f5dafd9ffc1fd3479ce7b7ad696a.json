{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\CreateChannel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useChatContext } from 'stream-chat-react';\nimport { UserList } from './';\nimport { CloseCreateChannel } from \"../assets/CloseCreateChannel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelNameInput = _ref => {\n  let {\n    channelName = '',\n    setChannelName\n  } = _ref;\n\n  const handleChange = e => {\n    e.preventDefault();\n    setChannelName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: channelName,\n      onChange: handleChange,\n      placeholder: \"channel-name (no spaces)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChannelNameInput;\n\nconst CreateChannel = _ref2 => {\n  _s();\n\n  let {\n    createType,\n    setIsCreating\n  } = _ref2;\n  const [client, setActiveChannel] = useChatContext();\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\n  const [channelName, setChannelName] = useState('');\n\n  const createChannel = async e => {\n    e.preventDefault();\n\n    try {\n      const newChannel = await client.channel(createType, channelName, {\n        name: channelName,\n        members: selectedUsers\n      });\n      await newChannel.watch();\n      setChannelName(\"\");\n      setIsCreating(false);\n      setSelectedUsers([client.userID]);\n      setActiveChannel(newChannel);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: createType === \"team\" ? \"Create a New Channel\" : \"Send a Direct Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseCreateChannel, {\n        setIsCreating: setIsCreating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), createType === \"team\" && /*#__PURE__*/_jsxDEV(ChannelNameInput, {\n      channelName: channelName,\n      setChannelName: setChannelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      setSelectedUsers: setSelectedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: createChannel,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createType === 'team' ? 'Create Channel' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateChannel, \"5F2HWyiJmsn9WZ3nJgjHoLNnw74=\", false, function () {\n  return [useChatContext];\n});\n\n_c2 = CreateChannel;\nexport default CreateChannel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChannelNameInput\");\n$RefreshReg$(_c2, \"CreateChannel\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","e","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","selectedUsers","setSelectedUsers","userID","createChannel","newChannel","channel","name","members","watch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from \"../assets/CloseCreateChannel\";\r\n\r\nconst ChannelNameInput = ({ channelName='', setChannelName}) => {\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setChannelName(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Name</p>\r\n      <input value={channelName} onChange={handleChange} placeholder=\"channel-name (no spaces)\" />\r\n      <p>Add Members</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst CreateChannel = ({ createType, setIsCreating }) => {\r\n  const [client, setActiveChannel] = useChatContext();\r\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\r\n  const [channelName, setChannelName] = useState('');\r\n\r\n  const createChannel = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newChannel = await client.channel(createType, channelName, {\r\n        name: channelName,\r\n        members: selectedUsers,\r\n      });\r\n\r\n      await newChannel.watch();\r\n\r\n      setChannelName(\"\");\r\n      setIsCreating(false);\r\n      setSelectedUsers([client.userID]);\r\n      setActiveChannel(newChannel);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          {createType === \"team\"\r\n            ? \"Create a New Channel\"\r\n            : \"Send a Direct Message\"}\r\n        </p>\r\n        <CloseCreateChannel setIsCreating={setIsCreating} />\r\n      </div>\r\n      {createType === \"team\" && (\r\n        <ChannelNameInput\r\n          channelName={channelName}\r\n          setChannelName={setChannelName}\r\n        />\r\n      )}\r\n      <UserList setSelectedUsers={setSelectedUsers} />\r\n      <div onClick={createChannel}>\r\n        <p>{createType === 'team' ? 'Create Channel' : ''}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateChannel;\r\n"]},"metadata":{},"sourceType":"module"}