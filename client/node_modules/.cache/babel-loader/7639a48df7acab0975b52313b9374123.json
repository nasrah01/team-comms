{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\ThreadMessageInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext } from \"react\";\nimport { ChatAutoComplete, EmojiPicker, useMessageInputContext } from \"stream-chat-react\";\nimport { GiphyContext } from \"./ChannelInner\";\nimport { LightningBoltSmall } from \"../assets/LightningBolt\";\nimport { SendButton } from '../assets/SendButton';\nimport { SmileyFace } from '../assets/SmileyFace';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThreadMessageInput = props => {\n  _s();\n\n  const {\n    giphyState,\n    setGiphyState\n  } = useContext(GiphyContext);\n  const messageInput = useMessageInputContext();\n  const onChange = useCallback(event => {\n    if (messageInput.text.length === 1 && event.nativeEvent.inputType === \"deleteContentBackward\") {\n      setGiphyState(false);\n    }\n\n    if (messageInput.text.startsWith(\"/giphy\") && !giphyState) {\n      event.target.value = event.target.value.replace(\"/giphy\", \"\");\n      setGiphyState(true);\n    }\n\n    messageInput.handleChange(event);\n  }, [giphyState, messageInput, setGiphyState]);\n\n  const GiphyIcon = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"giphy-icon__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(LightningBoltSmall, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"giphy-icon__text\",\n      children: \"GIPHY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thread-message-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-message-input__input\",\n      children: [giphyState && /*#__PURE__*/_jsxDEV(GiphyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(ChatAutoComplete, {\n        onChange: onChange,\n        rows: 1,\n        placeholder: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread-message-input__icons\",\n        children: /*#__PURE__*/_jsxDEV(SmileyFace, {\n          openEmojiPicker: messageInput.openEmojiPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread-message-input__button\",\n        role: \"button\",\n        \"aria-roledescription\": \"button\",\n        onClick: messageInput.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(SendButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmojiPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThreadMessageInput, \"BfSq0TVBzozAkEPOw8TTGdUsu/U=\", false, function () {\n  return [useMessageInputContext];\n});\n\n_c = ThreadMessageInput;\nexport default ThreadMessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadMessageInput\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/ThreadMessageInput.jsx"],"names":["React","useCallback","useContext","ChatAutoComplete","EmojiPicker","useMessageInputContext","GiphyContext","LightningBoltSmall","SendButton","SmileyFace","ThreadMessageInput","props","giphyState","setGiphyState","messageInput","onChange","event","text","length","nativeEvent","inputType","startsWith","target","value","replace","handleChange","GiphyIcon","openEmojiPicker","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,sBAHF,QAIO,mBAJP;AAMA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCX,UAAU,CAACI,YAAD,CAAhD;AAEA,QAAMQ,YAAY,GAAGT,sBAAsB,EAA3C;AAEA,QAAMU,QAAQ,GAAGd,WAAW,CACzBe,KAAD,IAAW;AACT,QACEF,YAAY,CAACG,IAAb,CAAkBC,MAAlB,KAA6B,CAA7B,IACAF,KAAK,CAACG,WAAN,CAAkBC,SAAlB,KAAgC,uBAFlC,EAGE;AACAP,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAED,QAAIC,YAAY,CAACG,IAAb,CAAkBI,UAAlB,CAA6B,QAA7B,KAA0C,CAACT,UAA/C,EAA2D;AACzDI,MAAAA,KAAK,CAACM,MAAN,CAAaC,KAAb,GAAqBP,KAAK,CAACM,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,QAA3B,EAAqC,EAArC,CAArB;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAEDC,IAAAA,YAAY,CAACW,YAAb,CAA0BT,KAA1B;AACD,GAfyB,EAgB1B,CAACJ,UAAD,EAAaE,YAAb,EAA2BD,aAA3B,CAhB0B,CAA5B;;AAmBA,QAAMa,SAAS,GAAG,mBAChB;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,iBACGd,UAAU,iBAAI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADjB,eAEE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEG,QAA5B;AAAsC,QAAA,IAAI,EAAE,CAA5C;AAA+C,QAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,eAAe,EAAED,YAAY,CAACa;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AACE,QAAA,SAAS,EAAC,8BADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,gCAAqB,QAHvB;AAIE,QAAA,OAAO,EAAEb,YAAY,CAACc,YAJxB;AAAA,+BAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAnDD;;GAAMlB,kB;UAGiBL,sB;;;KAHjBK,kB;AAqDN,eAAeA,kBAAf","sourcesContent":["import React, { useCallback, useContext } from \"react\";\r\nimport {\r\n  ChatAutoComplete,\r\n  EmojiPicker,\r\n  useMessageInputContext,\r\n} from \"stream-chat-react\";\r\n\r\nimport { GiphyContext } from \"./ChannelInner\";\r\n\r\nimport { LightningBoltSmall } from \"../assets/LightningBolt\";\r\nimport { SendButton } from '../assets/SendButton';\r\nimport { SmileyFace } from '../assets/SmileyFace';\r\n\r\nconst ThreadMessageInput = (props) => {\r\n  const { giphyState, setGiphyState } = useContext(GiphyContext);\r\n\r\n  const messageInput = useMessageInputContext();\r\n\r\n  const onChange = useCallback(\r\n    (event) => {\r\n      if (\r\n        messageInput.text.length === 1 &&\r\n        event.nativeEvent.inputType === \"deleteContentBackward\"\r\n      ) {\r\n        setGiphyState(false);\r\n      }\r\n\r\n      if (messageInput.text.startsWith(\"/giphy\") && !giphyState) {\r\n        event.target.value = event.target.value.replace(\"/giphy\", \"\");\r\n        setGiphyState(true);\r\n      }\r\n\r\n      messageInput.handleChange(event);\r\n    },\r\n    [giphyState, messageInput, setGiphyState]\r\n  );\r\n\r\n  const GiphyIcon = () => (\r\n    <div className=\"giphy-icon__wrapper\">\r\n      <LightningBoltSmall />\r\n      <p className=\"giphy-icon__text\">GIPHY</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"thread-message-input__wrapper\">\r\n      <div className=\"thread-message-input__input\">\r\n        {giphyState && <GiphyIcon />}\r\n        <ChatAutoComplete onChange={onChange} rows={1} placeholder=\"Reply\" />\r\n        <div className=\"thread-message-input__icons\">\r\n          <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\r\n        </div>\r\n        <div\r\n          className=\"thread-message-input__button\"\r\n          role=\"button\"\r\n          aria-roledescription=\"button\"\r\n          onClick={messageInput.handleSubmit}\r\n        >\r\n          <SendButton />\r\n        </div>\r\n      </div>\r\n      <EmojiPicker />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadMessageInput"]},"metadata":{},"sourceType":"module"}