{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\ChannelListContainer.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChannelList, useChatContext } from 'stream-chat-react';\nimport Cookies from 'universal-cookie';\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\nimport { AiOutlineLogout } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst CompanyHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CompanyHeader;\n\nconst SideBar = _ref => {\n  let {\n    logout\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AiOutlineLogout, {\n      onClick: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SideBar;\n\nconst channelTeamFilter = channels => {\n  return channels.filter(channel => channel.type === \"team\");\n};\n\nconst channelMessagingFilter = channels => {\n  return channels.filter(channel => channel.type === \"messaging\");\n};\n\nconst ChannelListContent = _ref2 => {\n  _s();\n\n  let {\n    isCreating,\n    setIsCreating,\n    setCreateType,\n    setIsEditing,\n    set\n  } = _ref2;\n  const {\n    client\n  } = useChatContext();\n\n  const logout = () => {\n    cookies.remove('token');\n    cookies.remove(\"username\");\n    cookies.remove(\"fullName\");\n    cookies.remove(\"userId\");\n    cookies.remove(\"email\");\n    cookies.remove(\"hashedPassword\");\n    window.location.reload();\n  };\n\n  const filters = {\n    members: {\n      $in: [client.userID]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CompanyHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelSearch, {\n        setToggleContainer: setToggleContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        channelRenderFilterFn: channelTeamFilter,\n        List: listProps => {\n          return /*#__PURE__*/_jsxDEV(TeamChannelList, { ...listProps,\n            type: \"team\",\n            isCreating: isCreating,\n            setIsCreating: setIsCreating,\n            setCreateType: setCreateType,\n            setIsEditing: setIsEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this);\n        },\n        Preview: previewProps => {\n          return /*#__PURE__*/_jsxDEV(TeamChannelPreview, { ...previewProps,\n            type: \"team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        channelRenderFilterFn: channelMessagingFilter,\n        List: listProps => {\n          return /*#__PURE__*/_jsxDEV(TeamChannelList, { ...listProps,\n            type: \"messaging\",\n            isCreating: isCreating,\n            setIsCreating: setIsCreating,\n            setCreateType: setCreateType,\n            setIsEditing: setIsEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        },\n        Preview: previewProps => {\n          return /*#__PURE__*/_jsxDEV(TeamChannelPreview, { ...previewProps,\n            type: \"messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelListContent, \"rxzlCgdUcVtg8H8zBybmJW3/+Lw=\", false, function () {\n  return [useChatContext];\n});\n\n_c3 = ChannelListContent;\n\nconst ChannelListContainer = _ref3 => {\n  _s2();\n\n  let {\n    setCreateType,\n    setIsCreating,\n    setIsEditing\n  } = _ref3;\n  const [toggleContainer, setToggleContainer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list__container\",\n      children: /*#__PURE__*/_jsxDEV(ChannelListContent, {\n        setIsCreating: setIsCreating,\n        setCreateType: setCreateType,\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-list__container-responsive\",\n      style: {\n        left: toggleContainer ? \"0%\" : \"-89%\",\n        backgroundColor: \"#005fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-list__container-toggle\",\n        onClick: () => setToggleContainer(prevToggleContainer => !prevToggleContainer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelListContent, {\n        setIsCreating: setIsCreating,\n        setCreateType: setCreateType,\n        setIsEditing: setIsEditing,\n        setToggleContainer: setToggleContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ChannelListContainer, \"BdWfyb8H4S3C1ROoeaCqNAELSdA=\");\n\n_c4 = ChannelListContainer;\nexport default ChannelListContainer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CompanyHeader\");\n$RefreshReg$(_c2, \"SideBar\");\n$RefreshReg$(_c3, \"ChannelListContent\");\n$RefreshReg$(_c4, \"ChannelListContainer\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/ChannelListContainer.jsx"],"names":["React","useState","ChannelList","useChatContext","Cookies","ChannelSearch","TeamChannelList","TeamChannelPreview","AiOutlineLogout","cookies","CompanyHeader","SideBar","logout","channelTeamFilter","channels","filter","channel","type","channelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","set","client","remove","window","location","reload","filters","members","$in","userID","setToggleContainer","listProps","previewProps","ChannelListContainer","toggleContainer","left","backgroundColor","prevToggleContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { ChannelList, useChatContext } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './'\r\nimport { AiOutlineLogout } from 'react-icons/ai'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst CompanyHeader = () => {\r\n  return (\r\n    <div>\r\n      <div>Header</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SideBar = ({logout}) => {\r\n  return (\r\n    <div>\r\n      <AiOutlineLogout onClick={logout}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst channelTeamFilter = (channels) => {\r\n  return channels.filter((channel) => channel.type === \"team\");\r\n};\r\n\r\nconst channelMessagingFilter = (channels) => {\r\n  return channels.filter((channel) => channel.type === \"messaging\");\r\n};\r\n\r\n\r\nconst ChannelListContent = ({isCreating, setIsCreating, setCreateType, setIsEditing, set}) => {\r\n\r\n  const { client } = useChatContext();\r\n\r\n  const logout = () => {\r\n    cookies.remove('token');\r\n    cookies.remove(\"username\");\r\n    cookies.remove(\"fullName\");\r\n    cookies.remove(\"userId\");\r\n    cookies.remove(\"email\");\r\n    cookies.remove(\"hashedPassword\");\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  const filters = {members: {$in: [client.userID]}};\r\n\r\n  return (\r\n    <div>\r\n      <SideBar logout={logout}/>\r\n      <div>\r\n        <CompanyHeader />\r\n        <ChannelSearch  setToggleContainer={setToggleContainer}/>\r\n        <ChannelList\r\n          filters={filters}\r\n          channelRenderFilterFn={channelTeamFilter}\r\n          List={(listProps) => {\r\n            return (\r\n              <TeamChannelList\r\n                {...listProps}\r\n                type=\"team\"\r\n                isCreating={isCreating}\r\n                setIsCreating={setIsCreating}\r\n                setCreateType={setCreateType}\r\n                setIsEditing={setIsEditing}\r\n              />\r\n            );\r\n          }}\r\n          Preview={(previewProps) => {\r\n            return <TeamChannelPreview {...previewProps} type=\"team\" />;\r\n          }}\r\n        />\r\n        <ChannelList\r\n          filters={filters}\r\n          channelRenderFilterFn={channelMessagingFilter}\r\n          List={(listProps) => {\r\n            return (\r\n              <TeamChannelList\r\n                {...listProps}\r\n                type=\"messaging\"\r\n                isCreating={isCreating}\r\n                setIsCreating={setIsCreating}\r\n                setCreateType={setCreateType}\r\n                setIsEditing={setIsEditing}\r\n              />\r\n            );\r\n          }}\r\n          Preview={(previewProps) => {\r\n            return <TeamChannelPreview {...previewProps} type=\"messaging\" />;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ChannelListContainer = ({setCreateType, setIsCreating, setIsEditing}) => {\r\n  const [toggleContainer, setToggleContainer] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"channel-list__container\">\r\n        <ChannelListContent\r\n          setIsCreating={setIsCreating}\r\n          setCreateType={setCreateType}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"channel-list__container-responsive\"\r\n        style={{\r\n          left: toggleContainer ? \"0%\" : \"-89%\",\r\n          backgroundColor: \"#005fff\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"channel-list__container-toggle\"\r\n          onClick={() =>\r\n            setToggleContainer((prevToggleContainer) => !prevToggleContainer)\r\n          }\r\n        ></div>\r\n        <ChannelListContent\r\n          setIsCreating={setIsCreating}\r\n          setCreateType={setCreateType}\r\n          setIsEditing={setIsEditing}\r\n          setToggleContainer={setToggleContainer}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChannelListContainer\r\n"]},"metadata":{},"sourceType":"module"}