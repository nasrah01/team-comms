{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\ChannelSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelSearch = () => {\n  _s();\n\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [teamChannels, setteamChannels] = useState([]);\n  useS;\n\n  const getChannels = async text => {\n    try {//to set up\n    } catch (error) {\n      setQuery('');\n    }\n  };\n\n  const onSearch = e => {\n    e.preventDefault();\n    setLoading(true);\n    setQuery(e.target.value);\n    getChannels(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"search Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\",\n      type: \"text\",\n      value: query,\n      onChange: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelSearch, \"PSC409/sbbf18kaOoSaaWKwUW5M=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChannelSearch;\nexport default ChannelSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/ChannelSearch.jsx"],"names":["React","useState","useChatContext","ChannelSearch","client","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setteamChannels","useS","getChannels","text","error","onSearch","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAA6BH,cAAc,EAAjD;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACAW,EAAAA,IAAI;;AAEJ,QAAMC,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAND;;AAQA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACAP,IAAAA,WAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,WAAW,EAAC,EAAnB;AAAsB,MAAA,IAAI,EAAE,MAA5B;AAAmC,MAAA,KAAK,EAAEd,KAA1C;AAAiD,MAAA,QAAQ,EAAEU;AAA3D;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMb,a;UAC+BD,c;;;KAD/BC,a;AAgCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nconst ChannelSearch = () => {\r\n  const {client, setActiveChannel} = useChatContext();\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [teamChannels, setteamChannels] = useState([]);\r\n  useS\r\n\r\n  const getChannels = async (text) => {\r\n    try {\r\n      //to set up\r\n    } catch (error) {\r\n      setQuery('')\r\n    }\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setQuery(e.target.value);\r\n    getChannels(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        search Icon\r\n      </div>\r\n      <input placeholder='' type= 'text' value={query} onChange={onSearch} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelSearch\r\n"]},"metadata":{},"sourceType":"module"}