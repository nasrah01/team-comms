{"ast":null,"code":"import React from'react';import{Avatar,useChatContext}from'stream-chat-react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var TeamChannelPreview=function TeamChannelPreview(_ref){var setActiveChannel=_ref.setActiveChannel,setIsCreating=_ref.setIsCreating,setIsEditing=_ref.setIsEditing,setToggleContainer=_ref.setToggleContainer,channel=_ref.channel,type=_ref.type;var _useChatContext=useChatContext(),activeChannel=_useChatContext.channel,client=_useChatContext.client;var ChannelPreview=function ChannelPreview(){var _channel$data,_channel$data2;return/*#__PURE__*/_jsxs(\"p\",{children:[\"# \",(channel===null||channel===void 0?void 0:(_channel$data=channel.data)===null||_channel$data===void 0?void 0:_channel$data.name)||(channel===null||channel===void 0?void 0:(_channel$data2=channel.data)===null||_channel$data2===void 0?void 0:_channel$data2.id)]});};var DirectPreview=function DirectPreview(){var _members$,_members$$user,_members$2,_members$2$user,_members$3,_members$3$user,_members$4,_members$4$user;var members=Object.values(channel.state.members).filter(function(_ref2){var user=_ref2.user;return user.id!==client.userID;});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Avatar,{image:(_members$=members[0])===null||_members$===void 0?void 0:(_members$$user=_members$.user)===null||_members$$user===void 0?void 0:_members$$user.image,name:(_members$2=members[0])===null||_members$2===void 0?void 0:(_members$2$user=_members$2.user)===null||_members$2$user===void 0?void 0:_members$2$user.fullName,size:24}),/*#__PURE__*/_jsx(\"p\",{children:((_members$3=members[0])===null||_members$3===void 0?void 0:(_members$3$user=_members$3.user)===null||_members$3$user===void 0?void 0:_members$3$user.fullName)||((_members$4=members[0])===null||_members$4===void 0?void 0:(_members$4$user=_members$4.user)===null||_members$4$user===void 0?void 0:_members$4$user.id)})]});};return/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){setIsCreating(false);setIsEditing(false);setActiveChannel(channel);if(setToggleContainer){setToggleContainer(function(prevState){return!prevState;});}},children:type===\"team\"?/*#__PURE__*/_jsx(ChannelPreview,{}):/*#__PURE__*/_jsx(DirectPreview,{})});};export default TeamChannelPreview;","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/TeamChannelPreview.jsx"],"names":["React","Avatar","useChatContext","TeamChannelPreview","setActiveChannel","setIsCreating","setIsEditing","setToggleContainer","channel","type","activeChannel","client","ChannelPreview","data","name","id","DirectPreview","members","Object","values","state","filter","user","userID","image","fullName","prevState"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,cAAhB,KAAqC,mBAArC,C,wFAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAOrB,IANJC,CAAAA,gBAMI,MANJA,gBAMI,CALJC,aAKI,MALJA,aAKI,CAJJC,YAII,MAJJA,YAII,CAHJC,kBAGI,MAHJA,kBAGI,CAFJC,OAEI,MAFJA,OAEI,CADJC,IACI,MADJA,IACI,CACJ,oBAA2CP,cAAc,EAAzD,CAAiBQ,aAAjB,iBAAQF,OAAR,CAAgCG,MAAhC,iBAAgCA,MAAhC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,kCAC3B,mBAAO,0BAAM,CAAAJ,OAAO,OAAP,EAAAA,OAAO,SAAP,uBAAAA,OAAO,CAAEK,IAAT,sDAAeC,IAAf,IAAuBN,OAAvB,SAAuBA,OAAvB,iCAAuBA,OAAO,CAAEK,IAAhC,yCAAuB,eAAeE,EAAtC,CAAN,GAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,+GAC1B,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CACd,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAI,CAACP,EAAL,GAAYJ,MAAM,CAACY,MAAjC,EADc,CAAhB,CAIA,mBACE,oCACE,KAAC,MAAD,EACE,KAAK,YAAEN,OAAO,CAAC,CAAD,CAAT,oDAAE,UAAYK,IAAd,yCAAE,eAAkBE,KAD3B,CAEE,IAAI,aAAEP,OAAO,CAAC,CAAD,CAAT,sDAAE,WAAYK,IAAd,0CAAE,gBAAkBG,QAF1B,CAGE,IAAI,CAAE,EAHR,EADF,cAME,mBAAI,aAAAR,OAAO,CAAC,CAAD,CAAP,iEAAYK,IAAZ,0DAAkBG,QAAlB,gBAA8BR,OAAO,CAAC,CAAD,CAArC,sDAA8B,WAAYK,IAA1C,0CAA8B,gBAAkBP,EAAhD,CAAJ,EANF,GADF,CAUD,CAfD,CAiBA,mBACE,YACE,OAAO,CAAE,kBAAM,CACbV,aAAa,CAAC,KAAD,CAAb,CACAC,YAAY,CAAC,KAAD,CAAZ,CACAF,gBAAgB,CAACI,OAAD,CAAhB,CACA,GAAID,kBAAJ,CAAwB,CACtBA,kBAAkB,CAAC,SAACmB,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAlB,CACD,CACF,CARH,UAUGjB,IAAI,GAAK,MAAT,cAAkB,KAAC,cAAD,IAAlB,cAAuC,KAAC,aAAD,IAV1C,EADF,CAcD,CA7CD,CA+CA,cAAeN,CAAAA,kBAAf","sourcesContent":["import React from 'react';\r\nimport {Avatar, useChatContext} from 'stream-chat-react';\r\n\r\nconst TeamChannelPreview = ({\r\n  setActiveChannel,\r\n  setIsCreating,\r\n  setIsEditing,\r\n  setToggleContainer,\r\n  channel,\r\n  type\r\n}) => {\r\n  const { channel: activeChannel, client } = useChatContext();\r\n\r\n  const ChannelPreview = () => {\r\n    return <p># {channel?.data?.name || channel?.data?.id}</p>;\r\n  };\r\n\r\n  const DirectPreview = () => {\r\n    const members = Object.values(channel.state.members).filter(\r\n      ({ user }) => user.id !== client.userID\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Avatar\r\n          image={members[0]?.user?.image}\r\n          name={members[0]?.user?.fullName}\r\n          size={24}\r\n        />\r\n        <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setIsCreating(false);\r\n        setIsEditing(false);\r\n        setActiveChannel(channel);\r\n        if (setToggleContainer) {\r\n          setToggleContainer((prevState) => !prevState);\r\n        }\r\n      }}\r\n    >\r\n      {type === \"team\" ? <ChannelPreview /> : <DirectPreview />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamChannelPreview\r\n"]},"metadata":{},"sourceType":"module"}