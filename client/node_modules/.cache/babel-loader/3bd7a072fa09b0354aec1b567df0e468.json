{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/nasra/OneDrive/Desktop/chat-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useChatContext}from'stream-chat-react';import{UserList}from'./';import{CloseCreateChannel}from\"../assets/CloseCreateChannel\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChannelNameInput=function ChannelNameInput(_ref){var _ref$channelName=_ref.channelName,channelName=_ref$channelName===void 0?'':_ref$channelName,setChannelName=_ref.setChannelName;var handleChange=function handleChange(e){e.preventDefault();setChannelName(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{value:channelName,onChange:handleChange,placeholder:\"channel-name (no spaces)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Members\"})]});};var CreateChannel=function CreateChannel(_ref2){var createType=_ref2.createType,setIsCreating=_ref2.setIsCreating;var _useChatContext=useChatContext(),client=_useChatContext.client,setActiveChannel=_useChatContext.setActiveChannel;var _useState=useState([client.userID||\"\"]),_useState2=_slicedToArray(_useState,2),selectedUsers=_useState2[0],setSelectedUsers=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),channelName=_useState4[0],setChannelName=_useState4[1];var createChannel=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newChannel;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;_context.next=4;return client.channel(createType,channelName,{name:channelName,members:selectedUsers});case 4:newChannel=_context.sent;_context.next=7;return newChannel.watch();case 7:setChannelName(\"\");setIsCreating(false);setSelectedUsers([client.userID]);setActiveChannel(newChannel);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function createChannel(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:createType===\"team\"?\"Create a New Channel\":\"Send a Direct Message\"}),/*#__PURE__*/_jsx(CloseCreateChannel,{setIsCreating:setIsCreating})]}),createType===\"team\"&&/*#__PURE__*/_jsx(ChannelNameInput,{channelName:channelName,setChannelName:setChannelName}),/*#__PURE__*/_jsx(UserList,{setSelectedUsers:setSelectedUsers}),/*#__PURE__*/_jsx(\"button\",{onClick:createChannel,children:/*#__PURE__*/_jsx(\"p\",{children:createType==='team'?'Create Channel':'Create Message Group'})})]});};export default CreateChannel;","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/CreateChannel.jsx"],"names":["React","useState","useChatContext","UserList","CloseCreateChannel","ChannelNameInput","channelName","setChannelName","handleChange","e","preventDefault","target","value","CreateChannel","createType","setIsCreating","client","setActiveChannel","userID","selectedUsers","setSelectedUsers","createChannel","channel","name","members","newChannel","watch","console","log"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,mBAA/B,CACA,OAASC,QAAT,KAAyB,IAAzB,CACA,OAASC,kBAAT,KAAmC,8BAAnC,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAuC,2BAApCC,WAAoC,CAApCA,WAAoC,2BAAxB,EAAwB,kBAApBC,cAAoB,MAApBA,cAAoB,CAE9D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAH,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd,CACD,CAHD,CAKA,mBACE,oCACE,2BADF,cAEE,cAAO,KAAK,CAAEN,WAAd,CAA2B,QAAQ,CAAEE,YAArC,CAAmD,WAAW,CAAC,0BAA/D,EAFF,cAGE,kCAHF,GADF,CAOD,CAdD,CAgBA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAmC,IAAhCC,CAAAA,UAAgC,OAAhCA,UAAgC,CAApBC,aAAoB,OAApBA,aAAoB,CACvD,oBAAqCb,cAAc,EAAnD,CAAQc,MAAR,iBAAQA,MAAR,CAAgBC,gBAAhB,iBAAgBA,gBAAhB,CACA,cAA0ChB,QAAQ,CAAC,CAACe,MAAM,CAACE,MAAP,EAAiB,EAAlB,CAAD,CAAlD,wCAAOC,aAAP,eAAsBC,gBAAtB,eACA,eAAsCnB,QAAQ,CAAC,EAAD,CAA9C,yCAAOK,WAAP,eAAoBC,cAApB,eAEA,GAAMc,CAAAA,aAAa,2FAAG,iBAAOZ,CAAP,iIACpBA,CAAC,CAACC,cAAF,GADoB,sCAIOM,CAAAA,MAAM,CAACM,OAAP,CAAeR,UAAf,CAA2BR,WAA3B,CAAwC,CAC/DiB,IAAI,CAAEjB,WADyD,CAE/DkB,OAAO,CAAEL,aAFsD,CAAxC,CAJP,QAIZM,UAJY,qCASZA,CAAAA,UAAU,CAACC,KAAX,EATY,QAWlBnB,cAAc,CAAC,EAAD,CAAd,CACAQ,aAAa,CAAC,KAAD,CAAb,CACAK,gBAAgB,CAAC,CAACJ,MAAM,CAACE,MAAR,CAAD,CAAhB,CACAD,gBAAgB,CAACQ,UAAD,CAAhB,CAdkB,iFAgBlBE,OAAO,CAACC,GAAR,cAhBkB,qEAAH,kBAAbP,CAAAA,aAAa,6CAAnB,CAoBA,mBACE,oCACE,oCACE,mBACGP,UAAU,GAAK,MAAf,CACG,sBADH,CAEG,uBAHN,EADF,cAME,KAAC,kBAAD,EAAoB,aAAa,CAAEC,aAAnC,EANF,GADF,CASGD,UAAU,GAAK,MAAf,eACC,KAAC,gBAAD,EACE,WAAW,CAAER,WADf,CAEE,cAAc,CAAEC,cAFlB,EAVJ,cAeE,KAAC,QAAD,EAAU,gBAAgB,CAAEa,gBAA5B,EAfF,cAgBE,eAAQ,OAAO,CAAEC,aAAjB,uBACE,mBAAIP,UAAU,GAAK,MAAf,CAAwB,gBAAxB,CAA2C,sBAA/C,EADF,EAhBF,GADF,CAsBD,CA/CD,CAiDA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from \"../assets/CloseCreateChannel\";\r\n\r\nconst ChannelNameInput = ({ channelName='', setChannelName}) => {\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setChannelName(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Name</p>\r\n      <input value={channelName} onChange={handleChange} placeholder=\"channel-name (no spaces)\" />\r\n      <p>Add Members</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst CreateChannel = ({ createType, setIsCreating }) => {\r\n  const { client, setActiveChannel } = useChatContext();\r\n  const [selectedUsers, setSelectedUsers] = useState([client.userID || \"\"]);\r\n  const [channelName, setChannelName] = useState(\"\");\r\n\r\n  const createChannel = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newChannel = await client.channel(createType, channelName, {\r\n        name: channelName,\r\n        members: selectedUsers,\r\n      });\r\n\r\n      await newChannel.watch();\r\n\r\n      setChannelName(\"\");\r\n      setIsCreating(false);\r\n      setSelectedUsers([client.userID]);\r\n      setActiveChannel(newChannel);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          {createType === \"team\"\r\n            ? \"Create a New Channel\"\r\n            : \"Send a Direct Message\"}\r\n        </p>\r\n        <CloseCreateChannel setIsCreating={setIsCreating} />\r\n      </div>\r\n      {createType === \"team\" && (\r\n        <ChannelNameInput\r\n          channelName={channelName}\r\n          setChannelName={setChannelName}\r\n        />\r\n      )}\r\n      <UserList setSelectedUsers={setSelectedUsers} />\r\n      <button onClick={createChannel}>\r\n        <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateChannel;\r\n"]},"metadata":{},"sourceType":"module"}