{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasra\\\\OneDrive\\\\Desktop\\\\chat-app\\\\client\\\\src\\\\components\\\\EmptyState.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useChatContext } from \"stream-chat-react\";\nimport styled from 'styled-components';\nimport { HashIcon } from \"../assets/HashIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmptyState = () => {\n  _s();\n\n  var _channel$state;\n\n  const {\n    channel,\n    client\n  } = useChatContext();\n  const members = Object.values(channel === null || channel === void 0 ? void 0 : (_channel$state = channel.state) === null || _channel$state === void 0 ? void 0 : _channel$state.members).filter(_ref => {\n    let {\n      user\n    } = _ref;\n    return user.id !== client.userID;\n  });\n\n  const getUserText = () => {\n    if (members.length === 1) {\n      return /*#__PURE__*/_jsxDEV(EmptyUser, {\n        children: `@${members[0].user.name || members[0].user.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (members.length === 2) {\n      return /*#__PURE__*/_jsxDEV(EmptyUser, {\n        children: `@${members[0].user.name || members[0].user.id} and @${members[1].user.name || members[1].user.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n\n    let memberString = \"\";\n    members.forEach((member, i) => {\n      if (i !== members.length - 1) {\n        memberString = `${memberString}@${member.user.name || member.user.id}, `;\n      } else {\n        memberString = `${memberString} and @${member.user.name || member.user.id}`;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(EmptyUser, {\n      children: memberString || \"the Universe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmptyContainer, {\n    children: [channel.type === \"team\" ? /*#__PURE__*/_jsxDEV(HashIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this) : null, /*#__PURE__*/_jsxDEV(EmptyFirst, {\n      children: [\"This is the beginning of your chat history\", channel.type === \"team\" ? \" in \" : \" with \", channel.type === \"team\" ? `#${channel.data.name || channel.data.id}` : getUserText()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmptySecond, {\n      children: \"Send messages, attachments, links, emojis, and more.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmptyState, \"Cibi+95kfOFxvoBzide/3vh/CGY=\", false, function () {\n  return [useChatContext];\n});\n\n_c = EmptyState;\nexport default EmptyState;\nconst EmptyContainer = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: flex-end;\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-bottom: 20px;\n`;\n_c2 = EmptyContainer;\nconst EmptyFirst = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.2;\n  color: #2c2c30;\n  margin-bottom: .5rem;\n`;\n_c3 = EmptyFirst;\nconst EmptySecond = styled.div`\n  font-size: 14px;\n  margin: 0;\n  color: #858688;\n`;\n_c4 = EmptySecond;\nconst EmptyUser = styled.div`\n  color: #005fff;\n`;\n_c5 = EmptyUser;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"EmptyState\");\n$RefreshReg$(_c2, \"EmptyContainer\");\n$RefreshReg$(_c3, \"EmptyFirst\");\n$RefreshReg$(_c4, \"EmptySecond\");\n$RefreshReg$(_c5, \"EmptyUser\");","map":{"version":3,"sources":["C:/Users/nasra/OneDrive/Desktop/chat-app/client/src/components/EmptyState.jsx"],"names":["React","useChatContext","styled","HashIcon","EmptyState","channel","client","members","Object","values","state","filter","user","id","userID","getUserText","length","name","memberString","forEach","member","i","type","data","EmptyContainer","div","EmptyFirst","EmptySecond","EmptyUser"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useChatContext } from \"stream-chat-react\";\r\nimport styled from 'styled-components'\r\n\r\nimport { HashIcon } from \"../assets/HashIcon\";\r\n\r\nconst EmptyState = () => {\r\n  const { channel, client } = useChatContext();\r\n  const members = Object.values(channel?.state?.members).filter(\r\n    ({ user }) => user.id !== client.userID\r\n  );\r\n\r\n  const getUserText = () => {\r\n    if (members.length === 1) {\r\n      return (\r\n        <EmptyUser>{`@${\r\n          members[0].user.name || members[0].user.id\r\n        }`}</EmptyUser>\r\n      );\r\n    }\r\n\r\n    if (members.length === 2) {\r\n      return (\r\n        <EmptyUser>{`@${\r\n          members[0].user.name || members[0].user.id\r\n        } and @${members[1].user.name || members[1].user.id}`}</EmptyUser>\r\n      );\r\n    }\r\n\r\n    let memberString = \"\";\r\n\r\n    members.forEach((member, i) => {\r\n      if (i !== members.length - 1) {\r\n        memberString = `${memberString}@${\r\n          member.user.name || member.user.id\r\n        }, `;\r\n      } else {\r\n        memberString = `${memberString} and @${\r\n          member.user.name || member.user.id\r\n        }`;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <EmptyUser>\r\n        {memberString || \"the Universe\"}\r\n      </EmptyUser>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <EmptyContainer>\r\n      {channel.type === \"team\" ? <HashIcon /> : null}\r\n      <EmptyFirst>\r\n        This is the beginning of your chat history\r\n        {channel.type === \"team\" ? \" in \" : \" with \"}\r\n        {channel.type === \"team\"\r\n          ? `#${channel.data.name || channel.data.id}`\r\n          : getUserText()}\r\n      </EmptyFirst>\r\n      <EmptySecond>\r\n        Send messages, attachments, links, emojis, and more.\r\n      </EmptySecond>\r\n    </EmptyContainer>\r\n  );\r\n};\r\n\r\nexport default EmptyState\r\n\r\nconst EmptyContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  padding-bottom: 20px;\r\n`\r\n\r\nconst EmptyFirst = styled.div`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  color: #2c2c30;\r\n  margin-bottom: .5rem;\r\n`;\r\n\r\nconst EmptySecond = styled.div`\r\n  font-size: 14px;\r\n  margin: 0;\r\n  color: #858688;\r\n`;\r\n\r\nconst EmptyUser = styled.div`\r\n  color: #005fff;\r\n`;"]},"metadata":{},"sourceType":"module"}