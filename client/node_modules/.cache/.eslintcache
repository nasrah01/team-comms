[{"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\index.js":"1","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\App.jsx":"2","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\index.js":"3","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelContainer.jsx":"4","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelListContainer.jsx":"5","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelSearch.jsx":"6","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\TeamChannelList.jsx":"7","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\TeamChannelPreview.jsx":"8","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\Auth.jsx":"9","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelInner.jsx":"10","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\CreateChannel.jsx":"11","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\EditChannel.jsx":"12","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\assets\\ChannelInfo.jsx":"13"},{"size":160,"mtime":1639918592749,"results":"14","hashOfConfig":"15"},{"size":1450,"mtime":1639921020510,"results":"16","hashOfConfig":"15"},{"size":550,"mtime":1639921818609,"results":"17","hashOfConfig":"15"},{"size":983,"mtime":1639925959660,"results":"18","hashOfConfig":"15"},{"size":1720,"mtime":1639912363343,"results":"19","hashOfConfig":"15"},{"size":727,"mtime":1639781899223,"results":"20","hashOfConfig":"15"},{"size":600,"mtime":1639826616349,"results":"21","hashOfConfig":"15"},{"size":907,"mtime":1639847187469,"results":"22","hashOfConfig":"15"},{"size":3385,"mtime":1639909829743,"results":"23","hashOfConfig":"15"},{"size":2913,"mtime":1639925023579,"results":"24","hashOfConfig":"15"},{"size":121,"mtime":1639914582184,"results":"25","hashOfConfig":"15"},{"size":117,"mtime":1639914533168,"results":"26","hashOfConfig":"15"},{"size":797,"mtime":1639916895278,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zgy18v",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\index.js",[],["58","59"],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\App.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\index.js",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelContainer.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelListContainer.jsx",["60"],"import React from 'react';\r\nimport { ChannelList, userChatContext } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './'\r\nimport { AiOutlineLogout } from 'react-icons/ai'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst CompanyHeader = () => {\r\n  return (\r\n    <div>\r\n      <div>Header</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SideBar = ({logout}) => {\r\n  return (\r\n    <div>\r\n      <AiOutlineLogout onClick={logout}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst ChannelListContainer = () => {\r\n\r\n  const logout = () => {\r\n    cookies.remove('token');\r\n    cookies.remove(\"username\");\r\n    cookies.remove(\"fullName\");\r\n    cookies.remove(\"userId\");\r\n    cookies.remove(\"email\");\r\n    cookies.remove(\"hashedPassword\");\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <SideBar logout={logout}/>\r\n      <div>\r\n        <CompanyHeader />\r\n        <ChannelSearch />\r\n        <ChannelList\r\n          filters={{}}\r\n          channelRenderFilterFn={() => {}}\r\n          List={(listProps) => {\r\n            return <TeamChannelList {...listProps} type=\"team\" />;\r\n          }}\r\n          Preview={(previewProps) => {\r\n            return <TeamChannelPreview {...previewProps} type=\"team\" />;\r\n          }}\r\n        />\r\n        <ChannelList\r\n          filters={{}}\r\n          channelRenderFilterFn={() => {}}\r\n          List={(listProps) => {\r\n            return <TeamChannelList {...listProps} type=\"messaging\" />;\r\n          }}\r\n          Preview={(previewProps) => {\r\n            return <TeamChannelPreview {...previewProps} type=\"messaging\" />;\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChannelListContainer\r\n","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelSearch.jsx",["61","62","63","64"],"import React, { useState, useEffect } from 'react';\r\nimport { getChannel, useChatContext } from 'stream-chat-react';\r\n\r\nconst ChannelSearch = () => {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getChannels = async (text) => {\r\n    try {\r\n      //to set up\r\n    } catch (error) {\r\n      setQuery('')\r\n    }\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setQuery(e.target.value);\r\n    getChannels(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        search Icon\r\n      </div>\r\n      <input placeholder='' type= 'text' value={query} onChange={onSearch} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChannelSearch\r\n","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\TeamChannelList.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\TeamChannelPreview.jsx",["65"],"import React from 'react';\r\nimport {Avatar, useChatContext} from 'stream-chat-react';\r\n\r\nconst TeamChannelPreview = ({channel, type}) => {\r\n\r\n  const {channel: activeChannel, client} = useChatContext();\r\n  const ChannelPreview = () => {\r\n    return (\r\n      <p>\r\n        # {channel?.data?.name || channel?.data?.id}\r\n      </p>\r\n    )\r\n  };\r\n\r\n  const DirectPreview = () => {\r\n    const members = Object.values(channel.state.members).filter( ({user}) => user.id !== client.userID);\r\n\r\n    return (\r\n      <div>\r\n        <Avatar\r\n          image={members[0]?.user?.image}\r\n          name={members[0]?.user?.fullName}\r\n          size={24}\r\n        />\r\n        <p>{members[0]?.user?.fullName}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => console.log(channel)}>\r\n      {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamChannelPreview\r\n","C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\Auth.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\ChannelInner.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\CreateChannel.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\components\\EditChannel.jsx",[],"C:\\Users\\nasra\\OneDrive\\Desktop\\chat-app\\client\\src\\assets\\ChannelInfo.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":23,"nodeType":"72","messageId":"73","endLine":2,"endColumn":38},{"ruleId":"70","severity":1,"message":"74","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"75","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"76","line":2,"column":22,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"77","line":7,"column":10,"nodeType":"72","messageId":"73","endLine":7,"endColumn":17},{"ruleId":"70","severity":1,"message":"78","line":6,"column":19,"nodeType":"72","messageId":"73","endLine":6,"endColumn":32},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'userChatContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getChannel' is defined but never used.","'useChatContext' is defined but never used.","'loading' is assigned a value but never used.","'activeChannel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]